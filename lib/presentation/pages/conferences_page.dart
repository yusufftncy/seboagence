/// ðŸŽ¤ Conferences Page - Konferanslar sayfasÄ±
///
/// Bu sayfa, ajansÄ±n dÃ¼zenlediÄŸi tÃ¼m konferans ve etkinlikleri sergiler.
library;

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../../core/theme/branding.dart';
import '../../core/utils/responsive.dart';
import '../widgets/optimized_navigation_bar.dart';
import '../widgets/common/footer_widget.dart';

class ConferencesPage extends ConsumerWidget {
  const ConferencesPage({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Scaffold(
      backgroundColor: const Color(0xFF131B2E),
      body: Column(
        children: [
          const OptimizedNavigationBar(),
          Expanded(child: _ConferencesPageContent()),
        ],
      ),
    );
  }
}

/// Conferences Page Content
class _ConferencesPageContent extends StatelessWidget {
  const _ConferencesPageContent();

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        children: [
          _HeroSection(),
          _UpcomingEventsSection(),
          _PastEventsSection(),
          const FooterWidget(),
        ],
      ),
    );
  }
}

/// Hero Section
class _HeroSection extends StatelessWidget {
  const _HeroSection();

  @override
  Widget build(BuildContext context) {
    final isMobile = Responsive.isMobile(context);
    final isTablet = Responsive.isTablet(context);

    return Container(
      width: double.infinity,
      padding: EdgeInsets.symmetric(
        horizontal: isMobile ? Branding.spacingL : Branding.spacingXXL,
        vertical: isMobile ? Branding.spacingXXL : Branding.spacingXXL * 2,
      ),
      decoration: const BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [Color(0xFF131B2E), Color(0xFF1A237E)],
        ),
      ),
      child: Column(
        children: [
          Text(
            'Konferanslar & Etkinlikler',
            style: TextStyle(
              color: Branding.white,
              fontSize: isMobile
                  ? 36.0
                  : isTablet
                  ? 48.0
                  : 64.0,
              fontWeight: FontWeight.w800,
              letterSpacing: -1.0,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: isMobile ? Branding.spacingM : Branding.spacingL),
          Text(
            'Dijital DÃ¼nyada Bilgi PaylaÅŸÄ±mÄ± ve Networking',
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.9),
              fontSize: isMobile
                  ? 18.0
                  : isTablet
                  ? 22.0
                  : 28.0,
              fontWeight: FontWeight.w400,
              height: 1.4,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: isMobile ? Branding.spacingXL : Branding.spacingXXL),
          Text(
            'SektÃ¶rÃ¼n Ã¶nde gelen uzmanlarÄ±yla buluÅŸtuÄŸumuz, bilgi paylaÅŸtÄ±ÄŸÄ±mÄ±z ve network kurduÄŸumuz etkinliklerimiz.',
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.8),
              fontSize: isMobile ? 16.0 : 18.0,
              fontWeight: FontWeight.w400,
              height: 1.6,
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }
}

/// Upcoming Events Section
class _UpcomingEventsSection extends StatelessWidget {
  const _UpcomingEventsSection();

  @override
  Widget build(BuildContext context) {
    final isMobile = Responsive.isMobile(context);

    return Container(
      width: double.infinity,
      padding: EdgeInsets.all(
        isMobile ? Branding.spacingL : Branding.spacingXXL,
      ),
      child: Column(
        children: [
          Text(
            'YaklaÅŸan Etkinlikler',
            style: TextStyle(
              color: Branding.white,
              fontSize: isMobile ? 28.0 : 36.0,
              fontWeight: FontWeight.w700,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: Branding.spacingS),
          Text(
            'Ã–nÃ¼mÃ¼zdeki dÃ¶nemde gerÃ§ekleÅŸecek konferanslarÄ±mÄ±z',
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.7),
              fontSize: isMobile ? 16.0 : 18.0,
              fontWeight: FontWeight.w400,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: Branding.spacingXL),
          _buildNoUpcomingEventsMessage(context),
        ],
      ),
    );
  }

  Widget _buildNoUpcomingEventsMessage(BuildContext context) {
    final isMobile = Responsive.isMobile(context);

    return Container(
      padding: EdgeInsets.all(isMobile ? 24.0 : 32.0),
      decoration: BoxDecoration(
        color: Branding.white.withValues(alpha: 0.05),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: Branding.white.withValues(alpha: 0.1),
          width: 1,
        ),
      ),
      child: Column(
        children: [
          Icon(
            Icons.event_busy_outlined,
            color: Branding.white.withValues(alpha: 0.6),
            size: isMobile ? 48.0 : 64.0,
          ),
          SizedBox(height: Branding.spacingM),
          Text(
            'YaklaÅŸan Etkinlik Bulunmuyor',
            style: TextStyle(
              color: Branding.white,
              fontSize: isMobile ? 20.0 : 24.0,
              fontWeight: FontWeight.w600,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: Branding.spacingS),
          Text(
            'Åžu anda planlanmÄ±ÅŸ yaklaÅŸan etkinliÄŸimiz bulunmamaktadÄ±r.\nYeni etkinlikler iÃ§in takipte kalÄ±n!',
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.7),
              fontSize: isMobile ? 14.0 : 16.0,
              fontWeight: FontWeight.w400,
              height: 1.5,
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }
}

/// Past Events Section
class _PastEventsSection extends StatelessWidget {
  const _PastEventsSection();

  @override
  Widget build(BuildContext context) {
    final isMobile = Responsive.isMobile(context);

    return Container(
      width: double.infinity,
      padding: EdgeInsets.all(
        isMobile ? Branding.spacingL : Branding.spacingXXL,
      ),
      decoration: BoxDecoration(color: Branding.white.withValues(alpha: 0.05)),
      child: Column(
        children: [
          Text(
            'GeÃ§miÅŸ Etkinlikler',
            style: TextStyle(
              color: Branding.white,
              fontSize: isMobile ? 28.0 : 36.0,
              fontWeight: FontWeight.w700,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: Branding.spacingS),
          Text(
            'DÃ¼zenlediÄŸimiz baÅŸarÄ±lÄ± konferans ve etkinlikler',
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.9),
              fontSize: isMobile ? 16.0 : 18.0,
              fontWeight: FontWeight.w400,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: Branding.spacingXL),
          Responsive.responsiveWidget(
            context,
            mobile: _buildMobilePastEvents(context),
            tablet: _buildTabletPastEvents(context),
            desktop: _buildDesktopPastEvents(context),
          ),
        ],
      ),
    );
  }

  Widget _buildMobilePastEvents(BuildContext context) {
    return Column(
      children: [
        _buildPastEventCard(
          context: context,
          title: 'CCI France Turquie EtkinliÄŸi',
          date: 'AralÄ±k 2025',
          participants: '150+ KatÄ±lÄ±mcÄ±',
          description: 'FransÄ±z Ticaret OdasÄ± TÃ¼rkiye ile iÅŸbirliÄŸi etkinliÄŸi',
          color: Branding.secondary,
        ),
        SizedBox(height: Branding.spacingL),
        _buildPastEventCard(
          context: context,
          title: 'FransÄ±z Ticaret OdasÄ± KonferansÄ±',
          date: 'KasÄ±m 2025',
          participants: '200+ KatÄ±lÄ±mcÄ±',
          description:
              'CCI France Turquie ile ortak dÃ¼zenlenen ticaret konferansÄ±',
          color: Branding.primary,
        ),
        SizedBox(height: Branding.spacingL),
        _buildPastEventCard(
          context: context,
          title: 'CCI France Turquie Ä°ÅŸbirliÄŸi EtkinliÄŸi',
          date: 'Ekim 2025',
          participants: '120+ KatÄ±lÄ±mcÄ±',
          description: 'FransÄ±z-TÃ¼rk iÅŸ dÃ¼nyasÄ± arasÄ±nda kÃ¶prÃ¼ kuran etkinlik',
          color: Branding.secondary,
        ),
      ],
    );
  }

  Widget _buildTabletPastEvents(BuildContext context) {
    return Column(
      children: [
        Row(
          children: [
            Expanded(
              child: _buildPastEventCard(
                context: context,
                title: 'CCI France Turquie EtkinliÄŸi',
                date: 'AralÄ±k 2025',
                participants: '150+ KatÄ±lÄ±mcÄ±',
                description:
                    'FransÄ±z Ticaret OdasÄ± TÃ¼rkiye ile iÅŸbirliÄŸi etkinliÄŸi',
                color: Branding.secondary,
              ),
            ),
            SizedBox(width: Branding.spacingL),
            Expanded(
              child: _buildPastEventCard(
                context: context,
                title: 'FransÄ±z Ticaret OdasÄ± KonferansÄ±',
                date: 'KasÄ±m 2025',
                participants: '200+ KatÄ±lÄ±mcÄ±',
                description:
                    'CCI France Turquie ile ortak dÃ¼zenlenen ticaret konferansÄ±',
                color: Branding.primary,
              ),
            ),
          ],
        ),
        SizedBox(height: Branding.spacingL),
        Row(
          children: [
            Expanded(
              child: _buildPastEventCard(
                context: context,
                title: 'CCI France Turquie Ä°ÅŸbirliÄŸi EtkinliÄŸi',
                date: 'Ekim 2025',
                participants: '120+ KatÄ±lÄ±mcÄ±',
                description:
                    'FransÄ±z-TÃ¼rk iÅŸ dÃ¼nyasÄ± arasÄ±nda kÃ¶prÃ¼ kuran etkinlik',
                color: Branding.secondary,
              ),
            ),
            SizedBox(width: Branding.spacingL),
            Expanded(child: Container()), // BoÅŸ alan
          ],
        ),
      ],
    );
  }

  Widget _buildDesktopPastEvents(BuildContext context) {
    return Row(
      children: [
        Expanded(
          child: _buildPastEventCard(
            context: context,
            title: 'CCI France Turquie EtkinliÄŸi',
            date: 'AralÄ±k 2025',
            participants: '150+ KatÄ±lÄ±mcÄ±',
            description:
                'FransÄ±z Ticaret OdasÄ± TÃ¼rkiye ile iÅŸbirliÄŸi etkinliÄŸi',
            color: Branding.secondary,
          ),
        ),
        SizedBox(width: Branding.spacingL),
        Expanded(
          child: _buildPastEventCard(
            context: context,
            title: 'FransÄ±z Ticaret OdasÄ± KonferansÄ±',
            date: 'KasÄ±m 2025',
            participants: '200+ KatÄ±lÄ±mcÄ±',
            description:
                'CCI France Turquie ile ortak dÃ¼zenlenen ticaret konferansÄ±',
            color: Branding.primary,
          ),
        ),
        SizedBox(width: Branding.spacingL),
        Expanded(
          child: _buildPastEventCard(
            context: context,
            title: 'CCI France Turquie Ä°ÅŸbirliÄŸi EtkinliÄŸi',
            date: 'Ekim 2025',
            participants: '120+ KatÄ±lÄ±mcÄ±',
            description:
                'FransÄ±z-TÃ¼rk iÅŸ dÃ¼nyasÄ± arasÄ±nda kÃ¶prÃ¼ kuran etkinlik',
            color: Branding.secondary,
          ),
        ),
      ],
    );
  }

  Widget _buildPastEventCard({
    required BuildContext context,
    required String title,
    required String date,
    required String participants,
    required String description,
    required Color color,
  }) {
    return Container(
      padding: EdgeInsets.all(Branding.spacingXL),
      decoration: BoxDecoration(
        color: Branding.white.withValues(alpha: 0.1),
        borderRadius: BorderRadius.circular(Branding.borderRadiusL),
        border: Border.all(
          color: Branding.white.withValues(alpha: 0.2),
          width: 1,
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // BaÅŸarÄ±lÄ± etkinlik etiketi
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
            decoration: BoxDecoration(
              color: color.withValues(alpha: 0.2),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Text(
              'TamamlandÄ±',
              style: TextStyle(
                color: Branding.white,
                fontSize: 12.0,
                fontWeight: FontWeight.w600,
              ),
            ),
          ),
          SizedBox(height: Branding.spacingL),

          // Etkinlik baÅŸlÄ±ÄŸÄ±
          Text(
            title,
            style: const TextStyle(
              color: Branding.white,
              fontSize: 20.0,
              fontWeight: FontWeight.w700,
            ),
          ),
          SizedBox(height: Branding.spacingS),

          // Tarih ve katÄ±lÄ±mcÄ± sayÄ±sÄ±
          Row(
            children: [
              Icon(Icons.calendar_today, color: Branding.white, size: 16.0),
              SizedBox(width: 8),
              Text(
                date,
                style: TextStyle(
                  color: Branding.white.withValues(alpha: 0.95),
                  fontSize: 14.0,
                  fontWeight: FontWeight.w500,
                ),
              ),
            ],
          ),
          SizedBox(height: 8),
          Row(
            children: [
              Icon(Icons.people, color: Branding.white, size: 16.0),
              SizedBox(width: 8),
              Text(
                participants,
                style: TextStyle(
                  color: Branding.white.withValues(alpha: 0.95),
                  fontSize: 14.0,
                  fontWeight: FontWeight.w500,
                ),
              ),
            ],
          ),
          SizedBox(height: Branding.spacingL),

          // AÃ§Ä±klama
          Text(
            description,
            style: TextStyle(
              color: Branding.white.withValues(alpha: 0.9),
              fontSize: 14.0,
              fontWeight: FontWeight.w400,
              height: 1.4,
            ),
          ),
          SizedBox(height: Branding.spacingL),

          // DetaylarÄ± gÃ¶r butonu
          OutlinedButton(
            onPressed: () {
              _showPastEventDetails(
                context,
                title: title,
                date: date,
                participants: participants,
                description: description,
                color: color,
              );
            },
            style: OutlinedButton.styleFrom(
              foregroundColor: Branding.white,
              side: BorderSide(color: Branding.white),
              padding: const EdgeInsets.symmetric(
                horizontal: Branding.spacingL,
                vertical: Branding.spacingM,
              ),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(Branding.borderRadiusM),
              ),
            ),
            child: const Text(
              'DetaylarÄ± GÃ¶r',
              style: TextStyle(
                fontWeight: FontWeight.w600,
                color: Branding.white,
              ),
            ),
          ),
        ],
      ),
    );
  }

  void _showPastEventDetails(
    BuildContext context, {
    required String title,
    required String date,
    required String participants,
    required String description,
    required Color color,
  }) {
    showModalBottomSheet(
      context: context,
      backgroundColor: const Color(0xFF0F1628),
      isScrollControlled: true,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
      ),
      builder: (ctx) {
        final isMobile = Responsive.isMobile(ctx);
        return Padding(
          padding: EdgeInsets.only(
            left: Branding.spacingXL,
            right: Branding.spacingXL,
            top: Branding.spacingXL,
            bottom: MediaQuery.of(ctx).viewInsets.bottom + Branding.spacingXL,
          ),
          child: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisSize: MainAxisSize.min,
              children: [
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                      decoration: BoxDecoration(
                        color: color.withValues(alpha: 0.2),
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: const Text(
                        'TamamlandÄ±',
                        style: TextStyle(
                          color: Branding.white,
                          fontSize: 12.0,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                    const Spacer(),
                    IconButton(
                      onPressed: () => Navigator.of(ctx).pop(),
                      icon: const Icon(Icons.close, color: Branding.white),
                    ),
                  ],
                ),
                SizedBox(height: Branding.spacingL),
                Text(
                  title,
                  style: TextStyle(
                    color: Branding.white,
                    fontSize: isMobile ? 22.0 : 26.0,
                    fontWeight: FontWeight.w800,
                  ),
                ),
                SizedBox(height: Branding.spacingS),
                Row(
                  children: [
                    const Icon(Icons.calendar_today, color: Branding.white, size: 16.0),
                    const SizedBox(width: 8),
                    Text(
                      date,
                      style: TextStyle(
                        color: Branding.white.withValues(alpha: 0.95),
                        fontSize: 14.0,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                    const SizedBox(width: 16),
                    const Icon(Icons.people, color: Branding.white, size: 16.0),
                    const SizedBox(width: 8),
                    Text(
                      participants,
                      style: TextStyle(
                        color: Branding.white.withValues(alpha: 0.95),
                        fontSize: 14.0,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ],
                ),
                SizedBox(height: Branding.spacingL),
                Text(
                  description,
                  style: TextStyle(
                    color: Branding.white.withValues(alpha: 0.9),
                    fontSize: isMobile ? 14.0 : 16.0,
                    height: 1.6,
                  ),
                ),
                SizedBox(height: Branding.spacingL),
                Divider(color: Branding.white.withValues(alpha: 0.1)),
                SizedBox(height: Branding.spacingM),
                Text(
                  'Etkinlik Ã–zeti',
                  style: TextStyle(
                    color: Branding.white,
                    fontSize: isMobile ? 16.0 : 18.0,
                    fontWeight: FontWeight.w700,
                  ),
                ),
                const SizedBox(height: 8),
                Text(
                  'Bu etkinlikte sektÃ¶r profesyonelleriyle kapsamlÄ± networking ve bilgi paylaÅŸÄ±mÄ± gerÃ§ekleÅŸtirildi. Sunumlar, paneller ve soru-cevap oturumlarÄ± ile katÄ±lÄ±mcÄ±lar gÃ¼ncel trendler hakkÄ±nda derinlemesine bilgi edindiler.',
                  style: TextStyle(
                    color: Branding.white.withValues(alpha: 0.85),
                    fontSize: isMobile ? 13.0 : 14.0,
                    height: 1.6,
                  ),
                ),
                SizedBox(height: Branding.spacingXL),
              ],
            ),
          ),
        );
      },
    );
  }
}

// Footer section replaced by common FooterWidget
