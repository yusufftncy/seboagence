/// üè† Home Page - Ana sayfa
///
/// Bu sayfa, uygulamanƒ±n ana sayfasƒ±dƒ±r.
library;

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:url_launcher/url_launcher.dart';
import '../../core/theme/branding.dart';
import '../../core/theme/typography.dart';
import '../../core/utils/responsive.dart';
import '../widgets/optimized_navigation_bar.dart';

class HomePage extends ConsumerStatefulWidget {
  const HomePage({super.key});

  @override
  ConsumerState<HomePage> createState() => _HomePageState();
}

class _HomePageState extends ConsumerState<HomePage>
    with TickerProviderStateMixin {
  late AnimationController _heroAnimationController;
  late AnimationController _fadeAnimationController;
  late AnimationController _slideAnimationController;

  late Animation<double> _heroAnimation;
  late Animation<double> _fadeAnimation;
  late Animation<Offset> _slideAnimation;

  bool _isLinkedInHovered = false;

  @override
  void initState() {
    super.initState();

    _heroAnimationController = AnimationController(
      duration: const Duration(milliseconds: 1500),
      vsync: this,
    );

    _fadeAnimationController = AnimationController(
      duration: const Duration(milliseconds: 1200),
      vsync: this,
    );

    _slideAnimationController = AnimationController(
      duration: const Duration(milliseconds: 1000),
      vsync: this,
    );

    _heroAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(
        parent: _heroAnimationController,
        curve: Curves.easeOutCubic,
      ),
    );

    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(parent: _fadeAnimationController, curve: Curves.easeOut),
    );

    _slideAnimation =
        Tween<Offset>(begin: const Offset(0, 0.3), end: Offset.zero).animate(
          CurvedAnimation(
            parent: _slideAnimationController,
            curve: Curves.easeOutCubic,
          ),
        );

    // Start animations
    _heroAnimationController.forward();
    Future.delayed(const Duration(milliseconds: 300), () {
      _fadeAnimationController.forward();
    });
    Future.delayed(const Duration(milliseconds: 600), () {
      _slideAnimationController.forward();
    });
  }

  @override
  void dispose() {
    _heroAnimationController.dispose();
    _fadeAnimationController.dispose();
    _slideAnimationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Branding.backgroundPrimary,
      body: Column(
        children: [
          // Ultra-Optimized Navigation Bar
          const OptimizedNavigationBar(),

          // Main Content
          Expanded(
            child: SingleChildScrollView(
              child: Column(
                children: [
                  // Hero Section - ≈ûebo Ajans Tanƒ±tƒ±mƒ±
                  _buildAgencyHeroSection(context),

                  // About Section - Kimim, Ne Yapƒ±yoruz, Neden √áalƒ±≈üƒ±yoruz
                  _buildAgencyAboutSection(context),

                  // Projects Section - Ho≈ü ƒ∞≈üler (≈ûebo Ajans'ƒ±n Projeleri)
                  _buildAgencyProjectsSection(context),

                  // Conferences Section - Yurt Dƒ±≈üƒ± Konferanslar & Etkinlikler
                  _buildConferencesSection(context),

                  // Footer
                  _FooterWidget(context),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAgencyHeroSection(BuildContext context) {
    return Container(
      width: double.infinity,
      constraints: BoxConstraints(
        minHeight: Responsive.screenHeight(context) * 0.85,
        maxHeight: Responsive.screenHeight(context) * 0.9,
      ),
      decoration: BoxDecoration(
        color: const Color(0xFF131B2E), // rgba(19, 27, 46) - Dark blue-grey
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF131B2E).withValues(alpha: 0.5),
            blurRadius: 20,
            offset: const Offset(0, 10),
          ),
        ],
      ),
      child: Stack(
        children: [
          // Background Pattern
          _buildBackgroundPattern(context),

          // Main Content
          Center(
            child: SingleChildScrollView(
              padding: const EdgeInsets.all(Branding.spacingL),
              child: AnimatedBuilder(
                animation: _heroAnimation,
                builder: (context, child) {
                  return Transform.scale(
                    scale: 0.8 + (0.2 * _heroAnimation.value),
                    child: Opacity(
                      opacity: _heroAnimation.value,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          // Main Title
                          FadeTransition(
                            opacity: _fadeAnimation,
                            child: SlideTransition(
                              position: _slideAnimation,
                              child: Text(
                                '≈ûEBO AJANS',
                                style: AppTypography.h1.copyWith(
                                  color: Branding.white,
                                  fontSize: Responsive.responsiveFontSize(
                                    context,
                                    desktop: 72,
                                    tablet: 56,
                                    mobile: 42,
                                  ),
                                  fontWeight: FontWeight.w900,
                                  letterSpacing: 3.0,
                                  shadows: [
                                    Shadow(
                                      color: Branding.black.withValues(
                                        alpha: 0.3,
                                      ),
                                      offset: const Offset(0, 4),
                                      blurRadius: 8,
                                    ),
                                  ],
                                ),
                                textAlign: TextAlign.center,
                              ),
                            ),
                          ),

                          const SizedBox(height: Branding.spacingL),

                          // Agency Tagline
                          FadeTransition(
                            opacity: _fadeAnimation,
                            child: SlideTransition(
                              position: _slideAnimation,
                              child: Container(
                                padding: const EdgeInsets.symmetric(
                                  horizontal: Branding.spacingXL,
                                  vertical: Branding.spacingM,
                                ),
                                decoration: BoxDecoration(
                                  color: Branding.white.withValues(alpha: 0.1),
                                  borderRadius: BorderRadius.circular(
                                    Branding.radiusL,
                                  ),
                                  border: Border.all(
                                    color: Branding.white.withValues(
                                      alpha: 0.3,
                                    ),
                                    width: 1,
                                  ),
                                ),
                                child: Text(
                                  'Yaratƒ±cƒ± Dijital √á√∂z√ºmler',
                                  style: AppTypography.h5.copyWith(
                                    color: Branding.white,
                                    fontSize: Responsive.responsiveFontSize(
                                      context,
                                      desktop: 20,
                                      tablet: 18,
                                      mobile: 16,
                                    ),
                                    fontWeight: FontWeight.w600,
                                    letterSpacing: 1.5,
                                  ),
                                  textAlign: TextAlign.center,
                                ),
                              ),
                            ),
                          ),

                          const SizedBox(height: Branding.spacingXL),

                          // Subtitle
                          FadeTransition(
                            opacity: _fadeAnimation,
                            child: SlideTransition(
                              position: _slideAnimation,
                              child: Text(
                                'Dijital d√ºnyada markanƒ±zƒ± √∂ne √ßƒ±karan\nstratejik ve yaratƒ±cƒ± √ß√∂z√ºmler',
                                style: AppTypography.h4.copyWith(
                                  color: Branding.white.withValues(alpha: 0.9),
                                  fontSize: Responsive.responsiveFontSize(
                                    context,
                                    desktop: 28,
                                    tablet: 22,
                                    mobile: 18,
                                  ),
                                  fontWeight: FontWeight.w300,
                                  letterSpacing: 1.2,
                                ),
                                textAlign: TextAlign.center,
                              ),
                            ),
                          ),

                          const SizedBox(height: Branding.spacingXL),

                          // CTA Buttons
                          FadeTransition(
                            opacity: _fadeAnimation,
                            child: SlideTransition(
                              position: _slideAnimation,
                              child: _buildHeroButtons(context),
                            ),
                          ),
                        ],
                      ),
                    ),
                  );
                },
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildBackgroundPattern(BuildContext context) {
    return CustomPaint(
      size: Size.infinite,
      painter: _BackgroundPatternPainter(),
    );
  }

  Widget _buildHeroButtons(BuildContext context) {
    return Responsive.responsiveWidget(
      context,
      mobile: Column(
        children: [
          _buildPrimaryButton(context),
          const SizedBox(height: Branding.spacingM),
          _buildSecondaryButton(context),
        ],
      ),
      tablet: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          _buildPrimaryButton(context),
          const SizedBox(width: Branding.spacingM),
          _buildSecondaryButton(context),
        ],
      ),
      desktop: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          _buildPrimaryButton(context),
          const SizedBox(width: Branding.spacingL),
          _buildSecondaryButton(context),
        ],
      ),
    );
  }

  Widget _buildPrimaryButton(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        color: const Color(0xFFE0E0E0), // Light grey
        borderRadius: BorderRadius.circular(Branding.radiusXL),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFFE0E0E0).withValues(alpha: 0.3),
            blurRadius: 20,
            offset: const Offset(0, 8),
          ),
        ],
      ),
      child: ElevatedButton(
        onPressed: () {
          // Projeler sayfasƒ±na git
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.transparent,
          shadowColor: Colors.transparent,
          padding: EdgeInsets.symmetric(
            horizontal: Responsive.responsiveValue(
              context,
              mobile: Branding.spacingXL,
              tablet: Branding.spacingXXL,
              desktop: Branding.spacingXXL + 8,
            ),
            vertical: Branding.spacingL,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(Branding.radiusXL),
          ),
        ),
        child: Text(
          'Hemen ƒ∞leti≈üime Ge√ß',
          style: AppTypography.button.copyWith(
            color: const Color(0xFF4A4A4A), // Medium grey
            fontSize: Responsive.responsiveFontSize(
              context,
              mobile: 14,
              tablet: 16,
              desktop: 18,
            ),
            fontWeight: FontWeight.w700,
          ),
        ),
      ),
    );
  }

  Widget _buildSecondaryButton(BuildContext context) {
    return OutlinedButton(
      onPressed: () {
        // Hakkƒ±mƒ±zda sayfasƒ±na git
      },
      style: OutlinedButton.styleFrom(
        side: const BorderSide(
          color: Color(0xFFE0E0E0), // Light grey border
          width: 2,
        ),
        padding: EdgeInsets.symmetric(
          horizontal: Responsive.responsiveValue(
            context,
            mobile: Branding.spacingXL,
            tablet: Branding.spacingXXL,
            desktop: Branding.spacingXXL + 8,
          ),
          vertical: Branding.spacingL,
        ),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(Branding.radiusXL),
        ),
      ),
      child: Text(
        'Projelerimizi ƒ∞ncele',
        style: AppTypography.button.copyWith(
          color: const Color(0xFFE0E0E0), // Light grey
          fontSize: Responsive.responsiveFontSize(
            context,
            mobile: 14,
            tablet: 16,
            desktop: 18,
          ),
          fontWeight: FontWeight.w600,
        ),
      ),
    );
  }

  Widget _buildAgencyProjectsSection(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: Responsive.responsivePadding(
        context,
        mobile: const EdgeInsets.all(16.0),
        tablet: const EdgeInsets.all(20.0),
        desktop: const EdgeInsets.all(24.0),
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            const Color(0xFFF8F9FA), // A√ßƒ±k gri
            const Color(0xFFE9ECEF), // Yumu≈üak gri
          ],
        ),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.1),
            blurRadius: 20,
            offset: const Offset(0, 8),
          ),
        ],
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileProjectsSection(context),
        tablet: _buildTabletProjectsSection(context),
        desktop: _buildDesktopProjectsSection(context),
      ),
    );
  }

  Widget _buildMobileProjectsSection(BuildContext context) {
    return Column(
      children: [
        // Section Header - Mobile'da ortalanmƒ±≈ü ve k√º√ß√ºk
        Text(
          'Ho≈ü ƒ∞≈üler',
          style: AppTypography.h2.copyWith(
            color: const Color(0xFF2C2C2C),
            fontSize: 20,
            fontWeight: FontWeight.w800,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 8),

        Text(
          'Sosyal Sorumluluk ve El Sanatlarƒ± Platformu',
          style: AppTypography.h4.copyWith(
            color: const Color(0xFF6B6B6B),
            fontSize: 12,
            fontWeight: FontWeight.w500,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 20),

        // Projects Grid - Mobile'da tek s√ºtun
        _buildMobileProjectsGrid(context),
      ],
    );
  }

  Widget _buildTabletProjectsSection(BuildContext context) {
    return Column(
      children: [
        Text(
          'Ho≈ü ƒ∞≈üler',
          style: AppTypography.h2.copyWith(
            color: const Color(0xFF2C2C2C),
            fontSize: 28,
            fontWeight: FontWeight.w800,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 12),

        Text(
          'Sosyal Sorumluluk ve El Sanatlarƒ± Platformu',
          style: AppTypography.h4.copyWith(
            color: const Color(0xFF6B6B6B),
            fontSize: 14,
            fontWeight: FontWeight.w500,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 24),

        _buildTabletProjectsGrid(context),
      ],
    );
  }

  Widget _buildDesktopProjectsSection(BuildContext context) {
    return Column(
      children: [
        Text(
          'Ho≈ü ƒ∞≈üler',
          style: AppTypography.h2.copyWith(
            color: const Color(0xFF2C2C2C),
            fontSize: 42,
            fontWeight: FontWeight.w800,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 16),

        Text(
          'Sosyal Sorumluluk ve El Sanatlarƒ± Platformu',
          style: AppTypography.h4.copyWith(
            color: const Color(0xFF6B6B6B),
            fontSize: 18,
            fontWeight: FontWeight.w500,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 32),

        _buildDesktopProjectsGrid(context),
      ],
    );
  }

  Widget _buildMobileProjectsGrid(BuildContext context) {
    final projects = _getProjectsData();

    return Column(
      children: projects.map((project) {
        return Padding(
          padding: const EdgeInsets.only(bottom: 16.0),
          child: _buildMobileProjectCard(context, project),
        );
      }).toList(),
    );
  }

  Widget _buildTabletProjectsGrid(BuildContext context) {
    final projects = _getProjectsData();

    return GridView.builder(
      shrinkWrap: true,
      physics: const NeverScrollableScrollPhysics(),
      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 2,
        crossAxisSpacing: 16.0,
        mainAxisSpacing: 16.0,
        childAspectRatio: 0.8,
      ),
      itemCount: projects.length,
      itemBuilder: (context, index) {
        return _buildTabletProjectCard(context, projects[index]);
      },
    );
  }

  Widget _buildDesktopProjectsGrid(BuildContext context) {
    final projects = _getProjectsData();

    return GridView.builder(
      shrinkWrap: true,
      physics: const NeverScrollableScrollPhysics(),
      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 3,
        crossAxisSpacing: 20.0,
        mainAxisSpacing: 20.0,
        childAspectRatio: 0.9,
      ),
      itemCount: projects.length,
      itemBuilder: (context, index) {
        return _buildDesktopProjectCard(context, projects[index]);
      },
    );
  }

  List<Map<String, dynamic>> _getProjectsData() {
    return [
      {
        'id': 'sifa',
        'title': '≈ûifa ƒ∞pek',
        'description':
            'Hatay\'da yeti≈üen Barƒ±≈ü ipeƒüi ve Hatay depreminden sonra k√∂ylerde ya≈üayan kadƒ±n √ßift√ßilerin tezgahlarƒ±nda dokuduklarƒ± √ºr√ºnlerin deƒüere d√∂nd√ºr√ºlmesine yardƒ±m eden sosyal sorumluluk projesi.',
        'image': 'assets/images/projects/sifa_project.jpg',
        'category': 'Sosyal Sorumluluk',
        'icon': Icons.favorite,
        'color': const Color(0xFF10B981), // Ye≈üil
      },
      {
        'id': 'vefa',
        'title': 'Vefa',
        'description':
            'Alanya\'daki ailemden kalan kƒ±z meslek lisesi ve turizm otelcilik okulu √∂ƒürencilerine ve Alanya ile ilgili projeleri kapsayan eƒüitim ve geli≈üim platformu.',
        'image': 'assets/images/projects/vefa_project.jpg',
        'category': 'Eƒüitim',
        'icon': Icons.school,
        'color': const Color(0xFF3B82F6), // Mavi
      },
      {
        'id': 'sefa',
        'title': 'Sefa',
        'description':
            '≈ûifa ƒ∞peƒüi ile √ºretilen keyifli √ºr√ºnlerden olu≈üan bir seri. Geleneksel el sanatlarƒ±nƒ±n modern ya≈üamla bulu≈ütuƒüu √∂zel koleksiyon.',
        'image': 'assets/images/projects/sefa_project.jpg',
        'category': 'El Sanatlarƒ±',
        'icon': Icons.palette,
        'color': const Color(0xFFF59E0B), // Turuncu
      },
    ];
  }

  Widget _buildMobileProjectCard(
    BuildContext context,
    Map<String, dynamic> project,
  ) {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Colors.white,
            (project['color'] as Color).withValues(alpha: 0.05),
          ],
        ),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: (project['color'] as Color).withValues(alpha: 0.2),
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: (project['color'] as Color).withValues(alpha: 0.1),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Material(
        color: Colors.transparent,
        child: InkWell(
          borderRadius: BorderRadius.circular(16),
          onTap: () {
            // Proje detayƒ±na git
          },
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Proje ikonu ve ba≈ülƒ±k - Mobile'da kompakt
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.all(8),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.3),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Icon(
                        project['icon'] as IconData,
                        color: project['color'] as Color,
                        size: 16,
                      ),
                    ),
                    const SizedBox(width: 12),
                    Expanded(
                      child: Text(
                        project['title'] as String,
                        style: AppTypography.h5.copyWith(
                          color: const Color(0xFF2C2C2C),
                          fontWeight: FontWeight.w700,
                          fontSize: 14,
                        ),
                      ),
                    ),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 8,
                        vertical: 4,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.2),
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Text(
                        '2023',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                          fontSize: 10,
                        ),
                      ),
                    ),
                  ],
                ),

                const SizedBox(height: 12),

                // M√º≈üteri bilgisi - Mobile'da k√º√ß√ºk
                Container(
                  padding: const EdgeInsets.symmetric(
                    horizontal: 8,
                    vertical: 4,
                  ),
                  decoration: BoxDecoration(
                    color: (project['color'] as Color).withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(8),
                    border: Border.all(
                      color: (project['color'] as Color).withValues(alpha: 0.3),
                      width: 1,
                    ),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Icon(
                        Icons.business,
                        color: project['color'] as Color,
                        size: 12,
                      ),
                      const SizedBox(width: 6),
                      Text(
                        'M√º≈üteri: ${project['category']} Holding',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                          fontSize: 9,
                        ),
                      ),
                    ],
                  ),
                ),

                const SizedBox(height: 12),

                // Proje a√ßƒ±klamasƒ± - Mobile'da kƒ±sa
                Text(
                  project['description'] as String,
                  style: AppTypography.bodyMedium.copyWith(
                    color: const Color(0xFF6B6B6B),
                    height: 1.4,
                    fontSize: 10,
                  ),
                  maxLines: 3,
                  overflow: TextOverflow.ellipsis,
                ),

                const SizedBox(height: 12),

                // Alt bilgi - Mobile'da kompakt
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 8,
                        vertical: 4,
                      ),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.2),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(8),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.4),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Icon(
                            project['icon'] as IconData,
                            color: project['color'] as Color,
                            size: 12,
                          ),
                          const SizedBox(width: 6),
                          Text(
                            project['category'] as String,
                            style: AppTypography.bodySmall.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                              fontSize: 9,
                            ),
                          ),
                        ],
                      ),
                    ),
                    const Spacer(),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 8,
                        vertical: 4,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.1),
                        borderRadius: BorderRadius.circular(8),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.3),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'Detaylarƒ± G√∂r',
                            style: AppTypography.bodyMedium.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                              fontSize: 9,
                            ),
                          ),
                          const SizedBox(width: 4),
                          Icon(
                            Icons.arrow_forward,
                            color: project['color'] as Color,
                            size: 12,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTabletProjectCard(
    BuildContext context,
    Map<String, dynamic> project,
  ) {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Colors.white,
            (project['color'] as Color).withValues(alpha: 0.05),
          ],
        ),
        borderRadius: BorderRadius.circular(20),
        border: Border.all(
          color: (project['color'] as Color).withValues(alpha: 0.2),
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: (project['color'] as Color).withValues(alpha: 0.1),
            blurRadius: 15,
            offset: const Offset(0, 6),
          ),
        ],
      ),
      child: Material(
        color: Colors.transparent,
        child: InkWell(
          borderRadius: BorderRadius.circular(20),
          onTap: () {
            // Proje detayƒ±na git
          },
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Proje ikonu ve ba≈ülƒ±k
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.all(12),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.3),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: Icon(
                        project['icon'] as IconData,
                        color: project['color'] as Color,
                        size: 20,
                      ),
                    ),
                    const SizedBox(width: 16),
                    Expanded(
                      child: Text(
                        project['title'] as String,
                        style: AppTypography.h5.copyWith(
                          color: const Color(0xFF2C2C2C),
                          fontWeight: FontWeight.w700,
                          fontSize: 16,
                        ),
                      ),
                    ),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 12,
                        vertical: 6,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.2),
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: Text(
                        '2023',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                          fontSize: 11,
                        ),
                      ),
                    ),
                  ],
                ),

                const SizedBox(height: 16),

                // M√º≈üteri bilgisi
                Container(
                  padding: const EdgeInsets.symmetric(
                    horizontal: 12,
                    vertical: 6,
                  ),
                  decoration: BoxDecoration(
                    color: (project['color'] as Color).withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(12),
                    border: Border.all(
                      color: (project['color'] as Color).withValues(alpha: 0.3),
                      width: 1,
                    ),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Icon(
                        Icons.business,
                        color: project['color'] as Color,
                        size: 14,
                      ),
                      const SizedBox(width: 8),
                      Text(
                        'M√º≈üteri: ${project['category']} Holding',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                          fontSize: 10,
                        ),
                      ),
                    ],
                  ),
                ),

                const SizedBox(height: 16),

                // Proje a√ßƒ±klamasƒ±
                Expanded(
                  child: Text(
                    project['description'] as String,
                    style: AppTypography.bodyMedium.copyWith(
                      color: const Color(0xFF6B6B6B),
                      height: 1.5,
                      fontSize: 12,
                    ),
                    maxLines: 4,
                    overflow: TextOverflow.ellipsis,
                  ),
                ),

                const SizedBox(height: 16),

                // Alt bilgi
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 12,
                        vertical: 6,
                      ),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.2),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(12),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.4),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Icon(
                            project['icon'] as IconData,
                            color: project['color'] as Color,
                            size: 14,
                          ),
                          const SizedBox(width: 8),
                          Text(
                            project['category'] as String,
                            style: AppTypography.bodySmall.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                              fontSize: 10,
                            ),
                          ),
                        ],
                      ),
                    ),
                    const Spacer(),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 12,
                        vertical: 6,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.1),
                        borderRadius: BorderRadius.circular(12),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.3),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'Detaylarƒ± G√∂r',
                            style: AppTypography.bodyMedium.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                              fontSize: 10,
                            ),
                          ),
                          const SizedBox(width: 6),
                          Icon(
                            Icons.arrow_forward,
                            color: project['color'] as Color,
                            size: 14,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildDesktopProjectCard(
    BuildContext context,
    Map<String, dynamic> project,
  ) {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Colors.white,
            (project['color'] as Color).withValues(alpha: 0.05),
          ],
        ),
        borderRadius: BorderRadius.circular(Branding.radiusXL),
        border: Border.all(
          color: (project['color'] as Color).withValues(alpha: 0.2),
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: (project['color'] as Color).withValues(alpha: 0.1),
            blurRadius: 20,
            offset: const Offset(0, 8),
          ),
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Material(
        color: Colors.transparent,
        child: InkWell(
          borderRadius: BorderRadius.circular(Branding.radiusXL),
          onTap: () {
            // Proje detayƒ±na git
          },
          child: Padding(
            padding: const EdgeInsets.all(Branding.spacingXL),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Proje ikonu ve ba≈ülƒ±k
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.all(Branding.spacingM),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.3),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(Branding.radiusL),
                      ),
                      child: Icon(
                        project['icon'] as IconData,
                        color: project['color'] as Color,
                        size: 28,
                      ),
                    ),
                    const SizedBox(width: Branding.spacingL),
                    Expanded(
                      child: Text(
                        project['title'] as String,
                        style: AppTypography.h5.copyWith(
                          color: const Color(0xFF2C2C2C),
                          fontWeight: FontWeight.w700,
                        ),
                      ),
                    ),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: Branding.spacingM,
                        vertical: Branding.spacingS,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.2),
                        borderRadius: BorderRadius.circular(Branding.radiusL),
                      ),
                      child: Text(
                        '2023',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                  ],
                ),

                const SizedBox(height: Branding.spacingM),

                // M√º≈üteri bilgisi
                Container(
                  padding: const EdgeInsets.symmetric(
                    horizontal: Branding.spacingM,
                    vertical: Branding.spacingS,
                  ),
                  decoration: BoxDecoration(
                    color: (project['color'] as Color).withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(Branding.radiusL),
                    border: Border.all(
                      color: (project['color'] as Color).withValues(alpha: 0.3),
                      width: 1,
                    ),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Icon(
                        Icons.business,
                        color: project['color'] as Color,
                        size: 16,
                      ),
                      const SizedBox(width: Branding.spacingS),
                      Text(
                        'M√º≈üteri: ${project['category']} Holding',
                        style: AppTypography.bodySmall.copyWith(
                          color: project['color'] as Color,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ],
                  ),
                ),

                const SizedBox(height: Branding.spacingL),

                // Proje a√ßƒ±klamasƒ±
                Expanded(
                  child: Text(
                    project['description'] as String,
                    style: AppTypography.bodyMedium.copyWith(
                      color: const Color(0xFF6B6B6B),
                      height: 1.5,
                    ),
                    maxLines: 4,
                    overflow: TextOverflow.ellipsis,
                  ),
                ),

                const SizedBox(height: Branding.spacingL),

                // Alt bilgi
                Row(
                  children: [
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: Branding.spacingM,
                        vertical: Branding.spacingS,
                      ),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          colors: [
                            (project['color'] as Color).withValues(alpha: 0.2),
                            (project['color'] as Color).withValues(alpha: 0.1),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(Branding.radiusL),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.4),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Icon(
                            project['icon'] as IconData,
                            color: project['color'] as Color,
                            size: 16,
                          ),
                          const SizedBox(width: Branding.spacingS),
                          Text(
                            project['category'] as String,
                            style: AppTypography.bodySmall.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                            ),
                          ),
                        ],
                      ),
                    ),
                    const Spacer(),
                    Container(
                      padding: const EdgeInsets.symmetric(
                        horizontal: Branding.spacingM,
                        vertical: Branding.spacingS,
                      ),
                      decoration: BoxDecoration(
                        color: (project['color'] as Color).withValues(alpha: 0.1),
                        borderRadius: BorderRadius.circular(Branding.radiusL),
                        border: Border.all(
                          color: (project['color'] as Color).withValues(alpha: 0.3),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'Detaylarƒ± G√∂r',
                            style: AppTypography.bodyMedium.copyWith(
                              color: project['color'] as Color,
                              fontWeight: FontWeight.w600,
                            ),
                          ),
                          const SizedBox(width: Branding.spacingS),
                          Icon(
                            Icons.arrow_forward,
                            color: project['color'] as Color,
                            size: 16,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildAgencyAboutSection(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: EdgeInsets.all(
        Responsive.responsiveValue(
          context,
          mobile: Branding.spacingL,
          tablet: Branding.spacingXL,
          desktop: Branding.spacingXXL,
        ),
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            const Color(0xFFFFFFFF), // Beyaz
            const Color(0xFFF8F9FA), // √áok a√ßƒ±k gri
          ],
        ),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.1),
            blurRadius: 20,
            offset: const Offset(0, 8),
          ),
        ],
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileAboutSection(context),
        tablet: _buildTabletAboutSection(context),
        desktop: _buildDesktopAboutSection(context),
      ),
    );
  }

  Widget _buildMobileAboutSection(BuildContext context) {
    return Column(
      children: [
        _buildAboutContent(context),
        const SizedBox(height: Branding.spacingXL),
        _buildAboutStats(context),
      ],
    );
  }

  Widget _buildTabletAboutSection(BuildContext context) {
    return Row(
      children: [
        Expanded(flex: 2, child: _buildAboutContent(context)),
        const SizedBox(width: Branding.spacingXL),
        Expanded(flex: 1, child: _buildAboutStats(context)),
      ],
    );
  }

  Widget _buildDesktopAboutSection(BuildContext context) {
    return Row(
      children: [
        Expanded(flex: 3, child: _buildAboutContent(context)),
        const SizedBox(width: Branding.spacingXXL),
        Expanded(flex: 2, child: _buildAboutStats(context)),
      ],
    );
  }

  Widget _buildAboutContent(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        // ≈ûebnem Y√ºceer Profil B√∂l√ºm√º
        _buildFounderProfile(context),

        SizedBox(
          height: Responsive.responsiveValue(
            context,
            mobile: Branding.spacingXL,
            tablet: Branding.spacingXXL,
            desktop: Branding.spacingXXL + 16,
          ),
        ),

        // Ajans Hikayesi
        _buildAgencyStory(context),
      ],
    );
  }

  Widget _buildFounderProfile(BuildContext context) {
    return Container(
      padding: Responsive.responsivePadding(
        context,
        mobile: const EdgeInsets.all(16.0),
        tablet: const EdgeInsets.all(20.0),
        desktop: const EdgeInsets.all(24.0),
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            const Color(0xFFFFFFFF), // Beyaz
            const Color(0xFFF8F9FA), // √áok a√ßƒ±k gri
          ],
        ),
        borderRadius: BorderRadius.circular(Branding.radiusXL),
        border: Border.all(color: const Color(0xFFE5E7EB), width: 1),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.05),
            blurRadius: 15,
            offset: const Offset(0, 5),
          ),
        ],
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileProfileLayout(context),
        tablet: _buildTabletProfileLayout(context),
        desktop: _buildDesktopProfileLayout(context),
      ),
    );
  }

  Widget _buildMobileProfileLayout(BuildContext context) {
    return Column(
      children: [
        // Profil Fotoƒürafƒ± - Mobile'da ortalanmƒ±≈ü
        Center(
          child: GestureDetector(
            onTap: () => _showImageDialog(context),
            child: Container(
              width: 80,
              height: 80,
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(40),
                boxShadow: [
                  BoxShadow(
                    color: const Color(0xFF6B6B6B).withValues(alpha: 0.2),
                    blurRadius: 10,
                    offset: const Offset(0, 3),
                  ),
                ],
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.asset(
                  'assets/images/sebnemyuceer.jpg',
                  width: 80,
                  height: 80,
                  fit: BoxFit.cover,
                  filterQuality: FilterQuality.high,
                  isAntiAlias: true,
                  cacheWidth: 160,
                  cacheHeight: 160,
                  errorBuilder: (context, error, stackTrace) {
                    return Container(
                      color: const Color(0xFFE5E7EB),
                      child: const Icon(
                        Icons.person,
                        size: 40,
                        color: Color(0xFF9CA3AF),
                      ),
                    );
                  },
                ),
              ),
            ),
          ),
        ),

        const SizedBox(height: 16),

        // Profil Bilgileri - Mobile'da ortalanmƒ±≈ü
        Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Text(
              '≈ûebnem Y√ºceer',
              textAlign: TextAlign.center,
              style: AppTypography.h3.copyWith(
                color: const Color(0xFF2C2C2C),
                fontWeight: FontWeight.w700,
                fontSize: 18,
              ),
            ),

            const SizedBox(height: 8),

            Text(
              'L√ºks Marka Lideri & Ajans Kurucusu',
              textAlign: TextAlign.center,
              style: AppTypography.h5.copyWith(
                color: const Color(0xFF6B6B6B),
                fontWeight: FontWeight.w500,
                fontSize: 12,
              ),
            ),

            const SizedBox(height: 16),

            Text(
              'Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi l√ºks markalarƒ±n T√ºrkiye Genel M√ºd√ºrl√ºƒü√º yapmƒ±≈ü, Harvard Business School mezunu deneyimli bir lider.',
              textAlign: TextAlign.center,
              style: AppTypography.bodyLarge.copyWith(
                color: const Color(0xFF4A4A4A),
                fontSize: 11,
                height: 1.4,
              ),
            ),

            const SizedBox(height: 20),

            // LinkedIn Link - Mobile'da tam geni≈ülik
            _buildLinkedInButton(context, isMobile: true),
          ],
        ),
      ],
    );
  }

  Widget _buildTabletProfileLayout(BuildContext context) {
    return Row(
      children: [
        // Profil Fotoƒürafƒ±
        GestureDetector(
          onTap: () => _showImageDialog(context),
          child: Container(
            width: 100,
            height: 100,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(50),
              boxShadow: [
                BoxShadow(
                  color: const Color(0xFF6B6B6B).withValues(alpha: 0.2),
                  blurRadius: 12,
                  offset: const Offset(0, 4),
                ),
              ],
            ),
            child: ClipRRect(
              borderRadius: BorderRadius.circular(50),
              child: Image.asset(
                'assets/images/sebnemyuceer.jpg',
                width: 100,
                height: 100,
                fit: BoxFit.cover,
                filterQuality: FilterQuality.high,
                isAntiAlias: true,
                cacheWidth: 200,
                cacheHeight: 200,
                errorBuilder: (context, error, stackTrace) {
                  return Container(
                    color: const Color(0xFFE5E7EB),
                    child: const Icon(
                      Icons.person,
                      size: 50,
                      color: Color(0xFF9CA3AF),
                    ),
                  );
                },
              ),
            ),
          ),
        ),

        const SizedBox(width: 20),

        // Profil Bilgileri
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                '≈ûebnem Y√ºceer',
                style: AppTypography.h3.copyWith(
                  color: const Color(0xFF2C2C2C),
                  fontWeight: FontWeight.w700,
                  fontSize: 22,
                ),
              ),

              const SizedBox(height: 8),

              Text(
                'L√ºks Marka Lideri & Ajans Kurucusu',
                style: AppTypography.h5.copyWith(
                  color: const Color(0xFF6B6B6B),
                  fontWeight: FontWeight.w500,
                  fontSize: 14,
                ),
              ),

              const SizedBox(height: 16),

              Text(
                'Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi l√ºks markalarƒ±n T√ºrkiye Genel M√ºd√ºrl√ºƒü√º yapmƒ±≈ü, Harvard Business School mezunu deneyimli bir lider.',
                style: AppTypography.bodyLarge.copyWith(
                  color: const Color(0xFF4A4A4A),
                  fontSize: 13,
                  height: 1.5,
                ),
              ),

              const SizedBox(height: 20),

              _buildLinkedInButton(context, isMobile: false),
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildDesktopProfileLayout(BuildContext context) {
    return Row(
      children: [
        // Profil Fotoƒürafƒ±
        GestureDetector(
          onTap: () => _showImageDialog(context),
          child: Container(
            width: 120,
            height: 120,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(60),
              boxShadow: [
                BoxShadow(
                  color: const Color(0xFF6B6B6B).withValues(alpha: 0.2),
                  blurRadius: 15,
                  offset: const Offset(0, 5),
                ),
              ],
            ),
            child: ClipRRect(
              borderRadius: BorderRadius.circular(60),
              child: Image.asset(
                'assets/images/sebnemyuceer.jpg',
                width: 120,
                height: 120,
                fit: BoxFit.cover,
                filterQuality: FilterQuality.high,
                isAntiAlias: true,
                cacheWidth: 240,
                cacheHeight: 240,
                errorBuilder: (context, error, stackTrace) {
                  return Container(
                    color: const Color(0xFFE5E7EB),
                    child: const Icon(
                      Icons.person,
                      size: 60,
                      color: Color(0xFF9CA3AF),
                    ),
                  );
                },
              ),
            ),
          ),
        ),

        const SizedBox(width: 24),

        // Profil Bilgileri
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                '≈ûebnem Y√ºceer',
                style: AppTypography.h3.copyWith(
                  color: const Color(0xFF2C2C2C),
                  fontWeight: FontWeight.w700,
                  fontSize: 28,
                ),
              ),

              const SizedBox(height: 8),

              Text(
                'L√ºks Marka Lideri & Ajans Kurucusu',
                style: AppTypography.h5.copyWith(
                  color: const Color(0xFF6B6B6B),
                  fontWeight: FontWeight.w500,
                  fontSize: 18,
                ),
              ),

              const SizedBox(height: 20),

              Text(
                'Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi l√ºks markalarƒ±n T√ºrkiye Genel M√ºd√ºrl√ºƒü√º yapmƒ±≈ü, Harvard Business School mezunu deneyimli bir lider.',
                style: AppTypography.bodyLarge.copyWith(
                  color: const Color(0xFF4A4A4A),
                  fontSize: 16,
                  height: 1.6,
                ),
              ),

              const SizedBox(height: 24),

              _buildLinkedInButton(context, isMobile: false),
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildLinkedInButton(BuildContext context, {required bool isMobile}) {
    return MouseRegion(
      cursor: SystemMouseCursors.click,
      onEnter: (_) => setState(() => _isLinkedInHovered = true),
      onExit: (_) => setState(() => _isLinkedInHovered = false),
      child: GestureDetector(
        onTap: () => _launchLinkedIn(),
        child: AnimatedContainer(
          duration: const Duration(milliseconds: 200),
          width: isMobile ? double.infinity : null,
          padding: EdgeInsets.symmetric(
            horizontal: isMobile ? 16.0 : 12.0,
            vertical: isMobile ? 12.0 : 8.0,
          ),
          decoration: BoxDecoration(
            color: _isLinkedInHovered
                ? const Color(0xFF005885)
                : const Color(0xFF0077B5),
            borderRadius: BorderRadius.circular(Branding.radiusL),
            boxShadow: [
              BoxShadow(
                color: const Color(
                  0xFF0077B5,
                ).withValues(alpha: _isLinkedInHovered ? 0.4 : 0.2),
                blurRadius: _isLinkedInHovered ? 12 : 8,
                offset: Offset(0, _isLinkedInHovered ? 6 : 4),
              ),
            ],
          ),
          child: Row(
            mainAxisSize: MainAxisSize.min,
            mainAxisAlignment: isMobile
                ? MainAxisAlignment.center
                : MainAxisAlignment.start,
            children: [
              Icon(
                Icons.business,
                color: Colors.white,
                size: isMobile ? 14 : 16,
              ),
              SizedBox(width: isMobile ? 8 : 8),
              Flexible(
                child: Text(
                  'LinkedIn Profili',
                  style: AppTypography.bodyMedium.copyWith(
                    color: Colors.white,
                    fontWeight: FontWeight.w600,
                    fontSize: isMobile ? 12 : 14,
                  ),
                  overflow: TextOverflow.ellipsis,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildAgencyStory(BuildContext context) {
    return Container(
      padding: Responsive.responsivePadding(
        context,
        mobile: const EdgeInsets.all(16.0),
        tablet: const EdgeInsets.all(20.0),
        desktop: const EdgeInsets.all(24.0),
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            const Color(0xFFFFFFFF), // Beyaz
            const Color(0xFFF8F9FA), // √áok a√ßƒ±k gri
          ],
        ),
        borderRadius: BorderRadius.circular(Branding.radiusXL),
        border: Border.all(color: const Color(0xFFE5E7EB), width: 1),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.05),
            blurRadius: 15,
            offset: const Offset(0, 5),
          ),
        ],
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileAgencyStory(context),
        tablet: _buildTabletAgencyStory(context),
        desktop: _buildDesktopAgencyStory(context),
      ),
    );
  }

  Widget _buildMobileAgencyStory(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        // Ba≈ülƒ±k - Mobile'da ortalanmƒ±≈ü
        Center(
          child: Text(
            '≈ûebo Ajans Hikayesi',
            textAlign: TextAlign.center,
            style: AppTypography.h3.copyWith(
              color: const Color(0xFF2C2C2C),
              fontWeight: FontWeight.w700,
              fontSize: 18,
            ),
          ),
        ),

        const SizedBox(height: 12),

        // Alt ba≈ülƒ±k - Mobile'da ortalanmƒ±≈ü
        Center(
          child: Text(
            'Kimim, Ne Yapƒ±yoruz, Neden √áalƒ±≈üƒ±yoruz',
            textAlign: TextAlign.center,
            style: AppTypography.h5.copyWith(
              color: const Color(0xFF6B6B6B),
              fontWeight: FontWeight.w500,
              fontSize: 12,
            ),
          ),
        ),

        const SizedBox(height: 16),

        // Ana metin - Mobile'da daha k√º√ß√ºk font
        Text(
          '20+ yƒ±llƒ±k l√ºks perakende deneyimi ile Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi markalarƒ±n T√ºrkiye pazarƒ±nda b√ºy√ºmesine liderlik ettim. Harvard Business School eƒüitimi ve k√ºresel marka y√∂netimi deneyimimle, ≈ûebo Ajans\'ƒ± kurarak bu bilgi birikimini dijital d√ºnyaya ta≈üƒ±yorum.',
          textAlign: TextAlign.justify,
          style: AppTypography.bodyLarge.copyWith(
            color: const Color(0xFF4A4A4A),
            height: 1.5,
            fontSize: 11,
          ),
        ),

        const SizedBox(height: 16),

        // ƒ∞kinci metin - Mobile'da daha k√º√ß√ºk font
        Text(
          'T√ºrkiye Tanƒ±tƒ±m Grubu ƒ∞cra Kurulu Ba≈ükanlƒ±ƒüƒ± ve Comit√© Colbert T√ºrkiye Yƒ±lƒ± Ba≈ükanlƒ±ƒüƒ± deneyimlerimle, markalarƒ±n k√ºresel pazarlarda g√º√ßl√º konumlanmasƒ± i√ßin stratejik yakla≈üƒ±mlar geli≈ütiriyoruz. Her proje, bir markanƒ±n hikayesini en etkili ≈üekilde anlatma fƒ±rsatƒ±dƒ±r.',
          textAlign: TextAlign.justify,
          style: AppTypography.bodyMedium.copyWith(
            color: const Color(0xFF6B6B6B),
            height: 1.5,
            fontSize: 10,
          ),
        ),
      ],
    );
  }

  Widget _buildTabletAgencyStory(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '≈ûebo Ajans Hikayesi',
          style: AppTypography.h3.copyWith(
            color: const Color(0xFF2C2C2C),
            fontWeight: FontWeight.w700,
            fontSize: 22,
          ),
        ),

        const SizedBox(height: 16),

        Text(
          'Kimim, Ne Yapƒ±yoruz, Neden √áalƒ±≈üƒ±yoruz',
          style: AppTypography.h5.copyWith(
            color: const Color(0xFF6B6B6B),
            fontWeight: FontWeight.w500,
            fontSize: 14,
          ),
        ),

        const SizedBox(height: 20),

        Text(
          '20+ yƒ±llƒ±k l√ºks perakende deneyimi ile Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi markalarƒ±n T√ºrkiye pazarƒ±nda b√ºy√ºmesine liderlik ettim. Harvard Business School eƒüitimi ve k√ºresel marka y√∂netimi deneyimimle, ≈ûebo Ajans\'ƒ± kurarak bu bilgi birikimini dijital d√ºnyaya ta≈üƒ±yorum.',
          style: AppTypography.bodyLarge.copyWith(
            color: const Color(0xFF4A4A4A),
            height: 1.6,
            fontSize: 13,
          ),
        ),

        const SizedBox(height: 20),

        Text(
          'T√ºrkiye Tanƒ±tƒ±m Grubu ƒ∞cra Kurulu Ba≈ükanlƒ±ƒüƒ± ve Comit√© Colbert T√ºrkiye Yƒ±lƒ± Ba≈ükanlƒ±ƒüƒ± deneyimlerimle, markalarƒ±n k√ºresel pazarlarda g√º√ßl√º konumlanmasƒ± i√ßin stratejik yakla≈üƒ±mlar geli≈ütiriyoruz. Her proje, bir markanƒ±n hikayesini en etkili ≈üekilde anlatma fƒ±rsatƒ±dƒ±r.',
          style: AppTypography.bodyMedium.copyWith(
            color: const Color(0xFF6B6B6B),
            height: 1.6,
            fontSize: 12,
          ),
        ),
      ],
    );
  }

  Widget _buildDesktopAgencyStory(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '≈ûebo Ajans Hikayesi',
          style: AppTypography.h3.copyWith(
            color: const Color(0xFF2C2C2C),
            fontWeight: FontWeight.w700,
            fontSize: 28,
          ),
        ),

        const SizedBox(height: 20),

        Text(
          'Kimim, Ne Yapƒ±yoruz, Neden √áalƒ±≈üƒ±yoruz',
          style: AppTypography.h5.copyWith(
            color: const Color(0xFF6B6B6B),
            fontWeight: FontWeight.w500,
            fontSize: 18,
          ),
        ),

        const SizedBox(height: 24),

        Text(
          '20+ yƒ±llƒ±k l√ºks perakende deneyimi ile Louis Vuitton, Gucci ve Bulgari gibi d√ºnya devi markalarƒ±n T√ºrkiye pazarƒ±nda b√ºy√ºmesine liderlik ettim. Harvard Business School eƒüitimi ve k√ºresel marka y√∂netimi deneyimimle, ≈ûebo Ajans\'ƒ± kurarak bu bilgi birikimini dijital d√ºnyaya ta≈üƒ±yorum.',
          style: AppTypography.bodyLarge.copyWith(
            color: const Color(0xFF4A4A4A),
            height: 1.6,
            fontSize: 16,
          ),
        ),

        const SizedBox(height: 24),

        Text(
          'T√ºrkiye Tanƒ±tƒ±m Grubu ƒ∞cra Kurulu Ba≈ükanlƒ±ƒüƒ± ve Comit√© Colbert T√ºrkiye Yƒ±lƒ± Ba≈ükanlƒ±ƒüƒ± deneyimlerimle, markalarƒ±n k√ºresel pazarlarda g√º√ßl√º konumlanmasƒ± i√ßin stratejik yakla≈üƒ±mlar geli≈ütiriyoruz. Her proje, bir markanƒ±n hikayesini en etkili ≈üekilde anlatma fƒ±rsatƒ±dƒ±r.',
          style: AppTypography.bodyMedium.copyWith(
            color: const Color(0xFF6B6B6B),
            height: 1.6,
            fontSize: 14,
          ),
        ),
      ],
    );
  }

  Widget _buildAboutStats(BuildContext context) {
    return Container(
      padding: Responsive.responsivePadding(
        context,
        mobile: const EdgeInsets.all(16.0),
        tablet: const EdgeInsets.all(20.0),
        desktop: const EdgeInsets.all(24.0),
      ),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(Branding.radiusXL),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.08),
            blurRadius: 20,
            offset: const Offset(0, 8),
          ),
        ],
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileAboutStats(context),
        tablet: _buildTabletAboutStats(context),
        desktop: _buildDesktopAboutStats(context),
      ),
    );
  }

  Widget _buildMobileAboutStats(BuildContext context) {
    return Column(
      children: [
        // Ba≈ülƒ±k - Mobile'da ortalanmƒ±≈ü ve k√º√ß√ºk
        Text(
          'Neden Bizi Se√ßmelisiniz?',
          style: AppTypography.h3.copyWith(
            color: const Color(0xFF2C2C2C),
            fontWeight: FontWeight.w700,
            fontSize: 18,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 20),

        // √ñzellikler listesi - Mobile'da kompakt
        _buildMobileFeaturesList(context),
      ],
    );
  }

  Widget _buildTabletAboutStats(BuildContext context) {
    return Column(
      children: [
        Text(
          'Neden Bizi Se√ßmelisiniz?',
          style: AppTypography.h3.copyWith(
            color: const Color(0xFF2C2C2C),
            fontWeight: FontWeight.w700,
            fontSize: 22,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 24),

        _buildTabletFeaturesList(context),
      ],
    );
  }

  Widget _buildDesktopAboutStats(BuildContext context) {
    return Column(
      children: [
        Text(
          'Neden Bizi Se√ßmelisiniz?',
          style: AppTypography.h3.copyWith(
            color: const Color(0xFF2C2C2C),
            fontWeight: FontWeight.w700,
            fontSize: 28,
          ),
          textAlign: TextAlign.center,
        ),

        const SizedBox(height: 32),

        _buildDesktopFeaturesList(context),
      ],
    );
  }

  Widget _buildMobileFeaturesList(BuildContext context) {
    final features = [
      'üèÜ 20+ yƒ±l l√ºks perakende deneyimi',
      'üéì Harvard Business School eƒüitimi',
      'üåç K√ºresel marka y√∂netimi uzmanlƒ±ƒüƒ±',
      'ü§ù Louis Vuitton, Gucci, Bulgari deneyimi',
      'üìà T√ºrkiye Tanƒ±tƒ±m Grubu liderliƒüi',
      'üé® Comit√© Colbert T√ºrkiye Yƒ±lƒ± ba≈ükanlƒ±ƒüƒ±',
    ];

    return Column(
      children: features.map((feature) {
        return Padding(
          padding: const EdgeInsets.only(bottom: 12.0),
          child: Row(
            children: [
              Container(
                width: 6,
                height: 6,
                decoration: BoxDecoration(
                  color: const Color(0xFF3B82F6),
                  borderRadius: BorderRadius.circular(3),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Text(
                  feature,
                  style: AppTypography.bodyLarge.copyWith(
                    color: const Color(0xFF2C2C2C),
                    fontWeight: FontWeight.w500,
                    fontSize: 11,
                    height: 1.4,
                  ),
                ),
              ),
            ],
          ),
        );
      }).toList(),
    );
  }

  Widget _buildTabletFeaturesList(BuildContext context) {
    final features = [
      'üèÜ 20+ yƒ±l l√ºks perakende deneyimi',
      'üéì Harvard Business School eƒüitimi',
      'üåç K√ºresel marka y√∂netimi uzmanlƒ±ƒüƒ±',
      'ü§ù Louis Vuitton, Gucci, Bulgari deneyimi',
      'üìà T√ºrkiye Tanƒ±tƒ±m Grubu liderliƒüi',
      'üé® Comit√© Colbert T√ºrkiye Yƒ±lƒ± ba≈ükanlƒ±ƒüƒ±',
    ];

    return Column(
      children: features.map((feature) {
        return Padding(
          padding: const EdgeInsets.only(bottom: 16.0),
          child: Row(
            children: [
              Container(
                width: 7,
                height: 7,
                decoration: BoxDecoration(
                  color: const Color(0xFF3B82F6),
                  borderRadius: BorderRadius.circular(3.5),
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Text(
                  feature,
                  style: AppTypography.bodyLarge.copyWith(
                    color: const Color(0xFF2C2C2C),
                    fontWeight: FontWeight.w500,
                    fontSize: 13,
                    height: 1.5,
                  ),
                ),
              ),
            ],
          ),
        );
      }).toList(),
    );
  }

  Widget _buildDesktopFeaturesList(BuildContext context) {
    final features = [
      'üèÜ 20+ yƒ±l l√ºks perakende deneyimi',
      'üéì Harvard Business School eƒüitimi',
      'üåç K√ºresel marka y√∂netimi uzmanlƒ±ƒüƒ±',
      'ü§ù Louis Vuitton, Gucci, Bulgari deneyimi',
      'üìà T√ºrkiye Tanƒ±tƒ±m Grubu liderliƒüi',
      'üé® Comit√© Colbert T√ºrkiye Yƒ±lƒ± ba≈ükanlƒ±ƒüƒ±',
    ];

    return Column(
      children: features.map((feature) {
        return Padding(
          padding: const EdgeInsets.only(bottom: 20.0),
          child: Row(
            children: [
              Container(
                width: 8,
                height: 8,
                decoration: BoxDecoration(
                  color: const Color(0xFF3B82F6),
                  borderRadius: BorderRadius.circular(4),
                ),
              ),
              const SizedBox(width: 20),
              Expanded(
                child: Text(
                  feature,
                  style: AppTypography.bodyLarge.copyWith(
                    color: const Color(0xFF2C2C2C),
                    fontWeight: FontWeight.w500,
                    fontSize: 15,
                    height: 1.6,
                  ),
                ),
              ),
            ],
          ),
        );
      }).toList(),
    );
  }

  Widget _buildConferencesSection(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: EdgeInsets.all(
        Responsive.responsiveValue(
          context,
          mobile: Branding.spacingL,
          tablet: Branding.spacingXL,
          desktop: Branding.spacingXXL,
        ),
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            const Color(0xFFFFFFFF), // Beyaz
            const Color(0xFFF8F9FA), // √áok a√ßƒ±k gri
          ],
        ),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.05),
            blurRadius: 15,
            offset: const Offset(0, 5),
          ),
        ],
      ),
      child: Column(
        children: [
          Text(
            'Yurt Dƒ±≈üƒ± Konferanslar & Etkinlikler',
            style: AppTypography.h2.copyWith(
              color: const Color(0xFF2C2C2C),
              fontSize: Responsive.responsiveFontSize(
                context,
                desktop: 32,
                tablet: 28,
                mobile: 24,
              ),
              fontWeight: FontWeight.w700,
            ),
            textAlign: TextAlign.center,
          ),

          const SizedBox(height: Branding.spacingM),

          Text(
            'Uluslararasƒ± platformlarda yer aldƒ±ƒüƒ±mƒ±z etkinlikler',
            style: AppTypography.bodyLarge.copyWith(
              color: const Color(0xFF6B6B6B),
              fontSize: Responsive.responsiveFontSize(
                context,
                desktop: 16,
                tablet: 15,
                mobile: 14,
              ),
              fontWeight: FontWeight.w400,
            ),
            textAlign: TextAlign.center,
          ),

          SizedBox(
            height: Responsive.responsiveValue(
              context,
              mobile: Branding.spacingXL,
              tablet: Branding.spacingXXL,
              desktop: Branding.spacingXXL + 16,
            ),
          ),

          // Conferences Grid (sadece 2 tane g√∂ster)
          _buildMinimalConferencesGrid(context),

          SizedBox(
            height: Responsive.responsiveValue(
              context,
              mobile: Branding.spacingXL,
              tablet: Branding.spacingXXL,
              desktop: Branding.spacingXXL,
            ),
          ),

          // Daha Fazla Butonu
          _buildMoreConferencesButton(context),
        ],
      ),
    );
  }

  Widget _buildMinimalConferencesGrid(BuildContext context) {
    final conferences = [
      {
        'title': 'Vefa Bulu≈ümalarƒ± 2025',
        'description':
            'Anadolu Eƒüitim ve K√ºlt√ºr Vakfƒ± ile ƒ∞stanbul Aydƒ±n √úniversitesi i≈ü birliƒüiyle d√ºzenlenen etkinlikte, Zeytinburnu Semiha ≈ûakir Huzurevi sakinleriyle bir araya geldi. Fizyoterapi B√∂l√ºm√º akademisyenleri ve √∂ƒürencileriyle birlikte, ya≈ülƒ± bireylerin fiziksel ve sosyal refahƒ±nƒ± desteklemek amacƒ±yla √ße≈üitli √ßalƒ±≈ümalar ger√ßekle≈ütirdi.',
        'location': 'ƒ∞stanbul, T√ºrkiye',
        'date': 'Ocak 2025',
        'type': 'Etkinlik',
        'icon': Icons.favorite,
        'color': const Color(0xFF6B6B6B),
      },
      {
        'title': 'Avrupa ƒ∞klim Deƒüi≈üikliƒüi Uyum Konferansƒ±',
        'description':
            'Rimini, ƒ∞talya\'da d√ºzenlenen konferansta, uygulayƒ±cƒ±lar, h√ºk√ºmetler, ara≈ütƒ±rmacƒ±lar ve payda≈ülardan olu≈üan geni≈ü bir aƒüƒ±n adaptasyon uzmanlƒ±ƒüƒ±nƒ± bir araya getirdi. Pratik deneyimlerin payla≈üƒ±lmasƒ± ve Avrupa\'da daha akƒ±llƒ±, hƒ±zlƒ± ve sistemik adaptasyona y√∂nelik i≈ü birliƒüinin te≈üvik edilmesi amacƒ±yla dinamik bir platform olarak hizmet verdi.',
        'location': 'Rimini, ƒ∞talya',
        'date': '≈ûubat 2025',
        'type': 'Konferans',
        'icon': Icons.eco,
        'color': const Color(0xFF6B6B6B),
      },
    ];

    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: Branding.spacingXXL),
      child: Row(
        children: conferences.map((conference) {
          return Expanded(
            child: Padding(
              padding: const EdgeInsets.symmetric(
                horizontal: Branding.spacingS,
              ),
              child: _buildMinimalConferenceCard(context, conference),
            ),
          );
        }).toList(),
      ),
    );
  }

  Widget _buildMinimalConferenceCard(
    BuildContext context,
    Map<String, dynamic> conference,
  ) {
    return Container(
      constraints: const BoxConstraints(minHeight: 280),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(Branding.radiusL),
        border: Border.all(color: const Color(0xFFE5E7EB), width: 1),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.05),
            blurRadius: 10,
            offset: const Offset(0, 3),
          ),
        ],
      ),
      child: Padding(
        padding: const EdgeInsets.all(Branding.spacingXL),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Ba≈ülƒ±k ve tip
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Expanded(
                  child: Text(
                    conference['title'] as String,
                    style: AppTypography.h6.copyWith(
                      color: const Color(0xFF2C2C2C),
                      fontWeight: FontWeight.w600,
                    ),
                    maxLines: 2,
                    overflow: TextOverflow.ellipsis,
                  ),
                ),
                Container(
                  padding: const EdgeInsets.symmetric(
                    horizontal: Branding.spacingS,
                    vertical: 4,
                  ),
                  decoration: BoxDecoration(
                    color: const Color(0xFFF3F4F6),
                    borderRadius: BorderRadius.circular(Branding.radiusM),
                  ),
                  child: Text(
                    conference['type'] as String,
                    style: AppTypography.bodySmall.copyWith(
                      color: const Color(0xFF6B6B6B),
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ),
              ],
            ),

            const SizedBox(height: Branding.spacingL),

            // Tarih ve lokasyon
            Row(
              children: [
                Icon(
                  Icons.location_on,
                  color: const Color(0xFF6B6B6B),
                  size: 16,
                ),
                const SizedBox(width: Branding.spacingS),
                Expanded(
                  child: Text(
                    conference['location'] as String,
                    style: AppTypography.bodySmall.copyWith(
                      color: const Color(0xFF6B6B6B),
                    ),
                  ),
                ),
              ],
            ),

            const SizedBox(height: Branding.spacingS),

            Row(
              children: [
                Icon(
                  Icons.calendar_today,
                  color: const Color(0xFF6B6B6B),
                  size: 16,
                ),
                const SizedBox(width: Branding.spacingS),
                Text(
                  conference['date'] as String,
                  style: AppTypography.bodySmall.copyWith(
                    color: const Color(0xFF6B6B6B),
                  ),
                ),
              ],
            ),

            const SizedBox(height: Branding.spacingL),

            // A√ßƒ±klama
            Text(
              conference['description'] as String,
              style: AppTypography.bodyMedium.copyWith(
                color: const Color(0xFF6B6B6B),
                height: 1.5,
              ),
              maxLines: 4,
              overflow: TextOverflow.ellipsis,
            ),

            const SizedBox(height: Branding.spacingM),
          ],
        ),
      ),
    );
  }

  Widget _buildMoreConferencesButton(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [const Color(0xFF6B6B6B), const Color(0xFF4A4A4A)],
        ),
        borderRadius: BorderRadius.circular(Branding.radiusL),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFF6B6B6B).withValues(alpha: 0.2),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: ElevatedButton(
        onPressed: () {
          // T√ºm konferanslar sayfasƒ±na git
          // Navigator.push(context, MaterialPageRoute(builder: (context) => AllConferencesPage()));
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.transparent,
          shadowColor: Colors.transparent,
          padding: EdgeInsets.symmetric(
            horizontal: Responsive.responsiveValue(
              context,
              mobile: Branding.spacingXL,
              tablet: Branding.spacingXXL,
              desktop: Branding.spacingXXL + 8,
            ),
            vertical: Branding.spacingL,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(Branding.radiusL),
          ),
        ),
        child: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            Text(
              'T√ºm Etkinlikleri G√∂r',
              style: AppTypography.button.copyWith(
                color: Colors.white,
                fontSize: Responsive.responsiveFontSize(
                  context,
                  mobile: 14,
                  tablet: 15,
                  desktop: 16,
                ),
                fontWeight: FontWeight.w600,
              ),
            ),
            const SizedBox(width: Branding.spacingS),
            const Icon(Icons.arrow_forward, color: Colors.white, size: 18),
          ],
        ),
      ),
    );
  }

  Future<void> _launchLinkedIn() async {
    try {
      final Uri url = Uri.parse(
        'https://www.linkedin.com/in/sebnem-berkol-yuceer-1255947/',
      );

      // Direkt launchUrl kullan - en basit yakla≈üƒ±m
      await launchUrl(url, mode: LaunchMode.platformDefault);
    } catch (e) {
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(
              'LinkedIn profili a√ßƒ±lamadƒ±. Manuel olarak a√ßƒ±n: https://www.linkedin.com/in/sebnem-berkol-yuceer-1255947/',
            ),
            backgroundColor: Colors.orange,
            duration: const Duration(seconds: 5),
          ),
        );
      }
    }
  }

  void _showImageDialog(BuildContext context) {
    Navigator.of(context).push(
      PageRouteBuilder(
        opaque: false,
        pageBuilder: (context, animation, secondaryAnimation) {
          return PopScope(
            canPop: true,
            onPopInvokedWithResult: (didPop, result) {
              if (!didPop) {
                Navigator.of(context).pop();
              }
            },
            child: Scaffold(
              backgroundColor: Colors.black.withValues(alpha: 0.7),
              body: GestureDetector(
                onTap: () => Navigator.of(context).pop(),
                child: Container(
                  width: double.infinity,
                  height: double.infinity,
                  color: Colors.transparent,
                  child: Center(
                    child: AbsorbPointer(
                      absorbing: false,
                      child: Container(
                        constraints: BoxConstraints(
                          maxWidth: MediaQuery.of(context).size.width * 0.9,
                          maxHeight: MediaQuery.of(context).size.height * 0.8,
                        ),
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(20),
                          child: Image.asset(
                            'assets/images/sebnemyuceer.jpg',
                            fit: BoxFit.contain,
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          );
        },
        transitionDuration: const Duration(milliseconds: 300),
        transitionsBuilder: (context, animation, secondaryAnimation, child) {
          return FadeTransition(opacity: animation, child: child);
        },
      ),
    );
  }
}

// Background Pattern Painter
class _BackgroundPatternPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    // Create very subtle platin grey circles with soft shimmer effect
    final paint1 = Paint()
      ..color = const Color(0xFFE8E8E8)
          .withValues(alpha: 0.06) // √áok daha s√ºzg√ºn platin gri
      ..style = PaintingStyle.fill
      ..maskFilter = const MaskFilter.blur(BlurStyle.normal, 60);

    final paint2 = Paint()
      ..color = const Color(0xFFF2F2F2)
          .withValues(alpha: 0.08) // √áok daha s√ºzg√ºn parlak platin gri
      ..style = PaintingStyle.fill
      ..maskFilter = const MaskFilter.blur(BlurStyle.normal, 65);

    // Sol √ºst k√∂≈üe - √ßok s√ºzg√ºn yuvarlak
    canvas.drawCircle(
      Offset(size.width * 0.12, size.height * 0.18),
      size.width * 0.32,
      paint1,
    );

    // Saƒü alt k√∂≈üe - √ßok s√ºzg√ºn yuvarlak
    canvas.drawCircle(
      Offset(size.width * 0.88, size.height * 0.82),
      size.width * 0.28,
      paint2,
    );

    // √áok s√ºzg√ºn parƒ±ltƒ± efekti
    final shimmerPaint = Paint()
      ..color = const Color(0xFFFFFFFF).withValues(alpha: 0.03)
      ..style = PaintingStyle.fill
      ..maskFilter = const MaskFilter.blur(BlurStyle.normal, 45);

    // Sol √ºst √ßok s√ºzg√ºn parƒ±ltƒ±
    canvas.drawCircle(
      Offset(size.width * 0.08, size.height * 0.12),
      size.width * 0.15,
      shimmerPaint,
    );

    // Saƒü alt √ßok s√ºzg√ºn parƒ±ltƒ±
    canvas.drawCircle(
      Offset(size.width * 0.92, size.height * 0.88),
      size.width * 0.12,
      shimmerPaint,
    );

    // Ek s√ºzg√ºn katman
    final subtlePaint = Paint()
      ..color = const Color(0xFFF5F5F5).withValues(alpha: 0.02)
      ..style = PaintingStyle.fill
      ..maskFilter = const MaskFilter.blur(BlurStyle.normal, 80);

    // Merkez s√ºzg√ºn efekt
    canvas.drawCircle(
      Offset(size.width * 0.5, size.height * 0.5),
      size.width * 0.25,
      subtlePaint,
    );
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;
}

// Footer Widget
class _FooterWidget extends StatelessWidget {
  const _FooterWidget(this.context);

  final BuildContext context;

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: EdgeInsets.all(
        Responsive.responsiveValue(
          context,
          mobile: Branding.spacingL,
          tablet: Branding.spacingXL,
          desktop: Branding.spacingXXL,
        ),
      ),
      decoration: const BoxDecoration(
        color: Color(0xFF131B2E), // Dark blue-grey
      ),
      child: Responsive.responsiveWidget(
        context,
        mobile: _buildMobileFooter(context),
        tablet: _buildDesktopFooter(context),
        desktop: _buildDesktopFooter(context),
      ),
    );
  }

  Widget _buildMobileFooter(BuildContext context) {
    return Column(
      children: [
        _buildFooterLogo(),
        const SizedBox(height: Branding.spacingXL),
        _buildFooterLinks(),
        const SizedBox(height: Branding.spacingXL),
        _buildFooterContact(),
        const SizedBox(height: Branding.spacingXL),
        _buildFooterBottom(),
      ],
    );
  }

  Widget _buildDesktopFooter(BuildContext context) {
    return Column(
      children: [
        Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Expanded(flex: 2, child: _buildFooterLogo()),
            const SizedBox(width: Branding.spacingXXL),
            Expanded(flex: 1, child: _buildFooterLinks()),
            const SizedBox(width: Branding.spacingXXL),
            Expanded(flex: 1, child: _buildFooterContact()),
          ],
        ),
        const SizedBox(height: Branding.spacingXXL),
        _buildFooterBottom(),
      ],
    );
  }

  Widget _buildFooterLogo() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        // Logo
        Row(
          children: [
            Container(
              padding: const EdgeInsets.symmetric(
                horizontal: 20.0,
                vertical: 8.0,
              ),
              decoration: BoxDecoration(
                color: const Color(0xFFE0E0E0),
                borderRadius: BorderRadius.circular(20.0),
              ),
              child: const Text(
                '≈ûEBO',
                style: TextStyle(
                  color: Color(0xFF4A4A4A),
                  fontWeight: FontWeight.w900,
                  fontSize: 18,
                  letterSpacing: 0.5,
                ),
              ),
            ),
            const SizedBox(width: 12.0),
            Container(
              padding: const EdgeInsets.symmetric(
                horizontal: 8.0,
                vertical: 2.0,
              ),
              decoration: BoxDecoration(
                border: Border(
                  bottom: BorderSide(
                    color: const Color(0xFFE0E0E0),
                    width: 1.5,
                  ),
                ),
              ),
              child: const Text(
                'creative agency',
                style: TextStyle(
                  color: Color(0xFFE0E0E0),
                  fontWeight: FontWeight.w300,
                  fontSize: 12,
                  letterSpacing: 1.2,
                  fontStyle: FontStyle.italic,
                ),
              ),
            ),
          ],
        ),

        const SizedBox(height: Branding.spacingL),

        // A√ßƒ±klama
        Text(
          'Yaratƒ±cƒ± ve yenilik√ßi √ß√∂z√ºmler sunan premium dijital ajans olarak, m√º≈üterilerimize en iyi hizmeti sunmayƒ± hedefliyoruz.',
          style: AppTypography.bodyMedium.copyWith(
            color: const Color(0xFFB0B0B0),
            height: 1.6,
          ),
        ),

        const SizedBox(height: Branding.spacingL),

        // Sosyal medya
        Row(
          children: [
            _buildSocialIcon(Icons.facebook, 'https://facebook.com'),
            const SizedBox(width: Branding.spacingM),
            _buildSocialIcon(Icons.camera_alt, 'https://instagram.com'),
            const SizedBox(width: Branding.spacingM),
            _buildSocialIcon(Icons.business, 'https://linkedin.com'),
            const SizedBox(width: Branding.spacingM),
            _buildSocialIcon(Icons.chat, 'https://twitter.com'),
          ],
        ),
      ],
    );
  }

  Widget _buildSocialIcon(IconData icon, String url) {
    return Container(
      padding: const EdgeInsets.all(8.0),
      decoration: BoxDecoration(
        color: const Color(0xFF2A2A2A),
        borderRadius: BorderRadius.circular(8.0),
      ),
      child: Icon(icon, color: const Color(0xFFE0E0E0), size: 20),
    );
  }

  Widget _buildFooterLinks() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Hƒ±zlƒ± Linkler',
          style: AppTypography.h6.copyWith(
            color: const Color(0xFFE0E0E0),
            fontWeight: FontWeight.w600,
          ),
        ),
        const SizedBox(height: Branding.spacingL),
        _buildFooterLink('Ana Sayfa'),
        _buildFooterLink('Hakkƒ±mƒ±zda'),
        _buildFooterLink('Projelerimiz'),
        _buildFooterLink('ƒ∞leti≈üim'),
      ],
    );
  }

  Widget _buildFooterLink(String text) {
    return Padding(
      padding: const EdgeInsets.only(bottom: Branding.spacingM),
      child: Text(
        text,
        style: AppTypography.bodyMedium.copyWith(
          color: const Color(0xFFB0B0B0),
        ),
      ),
    );
  }

  Widget _buildFooterContact() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'ƒ∞leti≈üim',
          style: AppTypography.h6.copyWith(
            color: const Color(0xFFE0E0E0),
            fontWeight: FontWeight.w600,
          ),
        ),
        const SizedBox(height: Branding.spacingL),
        _buildContactItem(Icons.email, 'info@ajanssebo.com'),
        _buildContactItem(Icons.phone, '+90 (212) 123 45 67'),
        _buildContactItem(Icons.location_on, 'ƒ∞stanbul, T√ºrkiye'),
      ],
    );
  }

  Widget _buildContactItem(IconData icon, String text) {
    return Padding(
      padding: const EdgeInsets.only(bottom: Branding.spacingM),
      child: Row(
        children: [
          Icon(icon, color: const Color(0xFFB0B0B0), size: 16),
          const SizedBox(width: Branding.spacingS),
          Text(
            text,
            style: AppTypography.bodyMedium.copyWith(
              color: const Color(0xFFB0B0B0),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildFooterBottom() {
    return Container(
      padding: const EdgeInsets.symmetric(vertical: Branding.spacingL),
      decoration: const BoxDecoration(
        border: Border(top: BorderSide(color: Color(0xFF2A2A2A), width: 1)),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(
            '¬© 2024 ≈ûebo Agence. T√ºm haklarƒ± saklƒ±dƒ±r.',
            style: AppTypography.bodySmall.copyWith(
              color: const Color(0xFF808080),
            ),
          ),
          Text(
            'Geli≈ütirildi ‚ù§Ô∏è ile',
            style: AppTypography.bodySmall.copyWith(
              color: const Color(0xFF808080),
            ),
          ),
        ],
      ),
    );
  }
}
